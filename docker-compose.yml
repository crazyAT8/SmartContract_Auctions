version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: auction_dapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/auction_dapp
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=3001
      - JWT_SECRET=your_jwt_secret_here
      - ETHEREUM_RPC_URL=http://hardhat:8545
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./contracts/deployments.json:/app/contracts/deployments.json:ro

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NEXT_PUBLIC_WS_URL=http://localhost:3001
      - NEXT_PUBLIC_ETHEREUM_RPC_URL=http://localhost:8545
    depends_on:
      - backend

  # Hardhat Local Network
  hardhat:
    build:
      context: ./contracts
      dockerfile: Dockerfile
    ports:
      - "8545:8545"
    volumes:
      - hardhat_data:/app/data

volumes:
  postgres_data:
  redis_data:
  hardhat_data:
